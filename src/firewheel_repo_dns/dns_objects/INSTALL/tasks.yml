---
- name: Check if DNS Objects is already installed
  ansible.builtin.stat:
    path: "{{ install_flag }}"
  register: flag_check

- name: Fail if already installed
  ansible.builtin.fail:
    msg: "dns_objects is already installed!"
  when: flag_check.stat.exists

- name: Create VM resources directory
  ansible.builtin.file:
    path: "{{ vm_resources_dir }}"
    state: directory

- name: Create parent directories
  ansible.builtin.file:
    path: "{{ vm_resources_dir }}/{{ item.name }}"
    state: directory
  loop: "{{ parents }}"

- name: Process files
  block:
    - name: Check if file exists
      ansible.builtin.stat:
        path: "{{ vm_resources_dir }}/{{ item.parent }}/{{ item.dest }}"
      register: file_check
      loop: "{{ files }}"

    - name: Verify checksum for existing file
      ansible.builtin.command: >
        echo "{{ item.sha256 }}  {{ vm_resources_dir }}/{{ item.parent }}/{{ item.dest }}" | sha256sum -c -
      register: checksum_result
      when: file_check.results | selectattr('item.dest', 'equalto', item.dest) | map(attribute='stat.exists') | first
      ignore_errors: yes
      changed_when: false
      loop: "{{ files }}"

    - name: Download missing file
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ vm_resources_dir }}/{{ item.parent }}/{{ item.dest }}"
      when: not file_check.results | selectattr('item.dest', 'equalto', item.dest) | map(attribute='stat.exists') | first
      loop: "{{ files }}"

- name: Compress parent directories into tarballs
  ansible.builtin.archive:
    path: "{{ vm_resources_dir }}/{{ item.name }}"
    dest: "{{ vm_resources_dir }}/{{ item.tarball }}"
    format: gz
  loop: "{{ parents }}"

- name: Remove parent directories
  ansible.builtin.file:
    path: "{{ vm_resources_dir }}/{{ item.name }}"
    state: absent
  loop: "{{ parents }}"

- name: Verify required files
  ansible.builtin.stat:
    path: "{{ item.destination }}"
  register: required_files_check
  loop: "{{ required_files }}"

- name: Fail if required files are missing
  ansible.builtin.fail:
    msg: "Required file {{ item.destination }} is missing!"
  when: required_files_check.results | selectattr('stat.exists', 'equalto', False) | list | length > 0

- name: Set installation flag
  ansible.builtin.file:
    path: "{{ install_flag }}"
    state: touch
